package ru.davidlevi.GoF.structural.i5_adapter.simple1;

import ru.davidlevi.GoF.structural.i5_adapter.simple1.adapter.Adapter;

import java.util.ArrayList;
import java.util.List;

/**
 * Паттерн Adapter (Адаптер)
 * <p>
 * Назначение:
 * - для организации использования функций объекта, недоступного для модификации, через специально созданный интерфейс
 * (приводит интерфейс класса (или нескольких классов) к интерфейсу требуемого вида)
 * Применение в случаях:
 * - система поддерживает требуемые данные и поведение, но имеет неподходящий интерфейс. Чаще всего шаблон Адаптер
 * применяется если необходимо создать класс, производный от вновь определяемого или уже существующего абстрактного
 * класса.
 * Плюсы:
 * - инкапсуляция реализации внешних классов (компонентов, библиотек), система становится независимой от интерфейса
 * внешних классов;
 * - переход на использование других внешних классов не требует переделки самой системы, достаточно реализовать один
 * класс Adapter.
 * Примечание:
 * - родственные шаблоны: Фасад, Декоратор
 */
public class MainClass {
    public static void main(String[] args) {
        // Список строк
        List<String> list = new ArrayList<>();
        list.add("строка 1");
        list.add("строка 2");
        list.add("строка 3");
        /*
          Печать через класс Adapter.
          Клиент, который хочет уметь печатать сразу много текста работает с адаптером, а не с принтером напрямую.
         */
        Adapter adapter = new Adapter();
        adapter.print(list);
    }
}
